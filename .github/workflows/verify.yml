name: Go Build and Test
on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build and Test chain
    defaults:
      run:
        working-directory: ./inference-chain
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.22.2' # Replace with your Go version

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clone cosmos-sdk repo with specific branch
        run: |
          git clone --branch release/v0.50.x https://github.com/product-science/cosmos-sdk.git ../../ps-fork/cosmos-sdk

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -o ./build/inferenced ./cmd/inferenced/main.go

      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report@latest
        env:
          GOROOT: /usr/local/go
          GOPATH: ${{ runner.workspace }}

      - name: Run Tests and Generate JUnit Report
        run: |
          mkdir -p test-results
          go test ./... -v 2>&1 | tee test-results/test-output.txt
          cat test-results/test-output.txt | go-junit-report > test-results/junit-report.xml
        env:
          GOROOT: /usr/local/go
          GOPATH: ${{ runner.workspace }}

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/

      - name: Report Test Results in GitHub
        uses: dorny/test-reporter@v1
        with:
          name: Go Tests
          path: test-results/junit-report.xml
          reporter: junit
  build-and-test-api:
    runs-on: ubuntu-latest
    name: Build and Test API Wrapper
    defaults:
      run:
        working-directory: ./decentralized-api
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Clone cosmos-sdk repo with specific branch
        run: |
          git clone --branch release/v0.50.x https://github.com/product-science/cosmos-sdk.git ../../ps-fork/cosmos-sdk

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.22.2' # Replace with your Go version

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build ./...

      - name: Install go-junit-report
        run: go install github.com/jstemmer/go-junit-report@latest
        env:
          GOROOT: /usr/local/go
          GOPATH: ${{ runner.workspace }}

      - name: Run Tests and Generate JUnit Report
        run: |
          mkdir -p test-results
          go test ./... -v 2>&1 | tee test-results/test-output.txt
          cat test-results/test-output.txt | go-junit-report > test-results/junit-report.xml
        env:
          GOROOT: /usr/local/go
          GOPATH: ${{ runner.workspace }}

      - name: Publish Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-api
          path: test-results/

      - name: Report Test Results in GitHub
        uses: dorny/test-reporter@v1
        with:
          name: API Tests
          path: test-results/junit-report.xml
          reporter: junit